buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.github.kri2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task copyAngularDistFolderToServersStaticFolder(type:Copy){
	from file(angularDistFolderPath)
	into file(staticResourcesFolderPath)
}



dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	// #### DATASOURCE ####
	runtimeOnly('org.postgresql:postgresql')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.0.RELEASE'
	//testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
	// for java 9+
	compile('javax.xml.bind:jaxb-api:2.3.0')
	// for java 9+, it actually helped 
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.1.Final'
	// JUnit5
	implementation 'org.junit.jupiter:junit-jupiter-api:5.5.0-M1'
	implementation 'org.junit.platform:junit-platform-runner:1.5.0-M1'
}

task serve(type: Exec){
	group 'dev'
	description 'Runs Spring locally in development mode.'
	dependsOn bootRun 
	/* bootRun is provided by spring-boot-gradle-plugin */
}

bootRun{
	//arguments passed to bootRun, don't have spring's dev version yet
	args = ["--spring.profiles.active=dev"]  //which is -Dspring.profiles.active=dev
}